/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

namespace torchcraft.fbs;

struct Vec2 {
  x:int;
  y:int;
}

table Command {
  code:int;
  args:[int];
  str:string;
}

table HandshakeClient {
  protocol:int;           // protocol for binary frame format
  map:string;
  window_size:Vec2;
  window_pos:Vec2;
  micro_mode:bool;
}

table HandshakeServer {
  lag_frames:int;
  map_size:Vec2;                // walk tile x and y
  ground_height_data:[ubyte];   // walk tile resolution of ground heights
  walkable_data:[ubyte];        // walk tile resolution of walkability
  map_name:string;
  is_replay:bool;
  player_id:int;                // if is_replay == false
  neutral_id:int;               // if is_replay == false
  battle_frame_count:int;       // if micro_mode == true
  buildable_data:[ubyte];       // walk tile resolution of buildability
  start_locations:[Vec2];
  player_races:[int];           // playerid -> race enum
}

table Commands {
  commands:[Command];
}

table FrameData {
 data:[ubyte];
 is_diff:bool;
}

table Frame {
  data:FrameData;
  deaths:[int];
  frame_from_bwapi:int;
  battle_frame_count:int;
  commands_status:[byte];       // Status for previous commands (zero == success)
  
  // if with_image
  img_mode:string;
  screen_position:Vec2;
  visibility:[ubyte];
  visibility_size:Vec2;
  img_data:[ubyte];
  img_size:Vec2;
}

table PlayerLeft {
  player_left:string;
}

table EndGame {
  data:FrameData;
  game_won:bool;
}

table Error {
  message:string;
}

union Any {
  // from client
  HandshakeClient,
  Commands,

  // from server
  HandshakeServer,
  Frame,
  PlayerLeft,
  EndGame,
  Error,
}

table Message {
  msg:Any;
  uid:string; // sender ID
}

root_type Message;
