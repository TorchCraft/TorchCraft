CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8 FATAL_ERROR)
CMAKE_POLICY(VERSION 2.8)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")
SET(CMAKE_CXX_STANDARD 14)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Dlest_FEATURE_AUTO_REGISTER=1")

IF(ATEN)
  FIND_PACKAGE(ATen REQUIRED)
ENDIF(ATEN)


INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/test")
INCLUDE_DIRECTORIES("${CMAKE_BINARY_DIR}/include")
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR})

IF(ATEN_FOUND)
  ADD_DEFINITIONS(-DWITH_ATEN)
ENDIF(ATEN_FOUND)

FOREACH(TDIR replayer)
  FILE(GLOB SRCS ${TDIR}/*.cpp)

  ADD_LIBRARY("_test_${TDIR}" STATIC ${SRCS})
  ADD_EXECUTABLE("test_${TDIR}" main_test.cpp)

  # Link with --whole-archive so that tests are discoverable
  IF(APPLE)
    TARGET_LINK_LIBRARIES("test_${TDIR}" -Wl,-all_load "_test_${TDIR}" torchcraft)
  ELSE()
    TARGET_LINK_LIBRARIES("test_${TDIR}"
      -Wl,--whole-archive "_test_${TDIR}" torchcraft -Wl,--no-whole-archive)
  ENDIF()

  ADD_TEST(NAME ${TDIR} COMMAND "test_${TDIR}")
ENDFOREACH(TDIR)
